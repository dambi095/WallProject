[{"/Users/kwondambi/Desktop/my-app/src/index.tsx":"1","/Users/kwondambi/Desktop/my-app/src/reportWebVitals.ts":"2","/Users/kwondambi/Desktop/my-app/src/App.tsx":"3","/Users/kwondambi/Desktop/my-app/src/components/Footer/MainFooter.tsx":"4","/Users/kwondambi/Desktop/my-app/src/components/Header/MainHeader.tsx":"5","/Users/kwondambi/Desktop/my-app/src/pages/Home.tsx":"6","/Users/kwondambi/Desktop/my-app/src/styles/theme.ts":"7","/Users/kwondambi/Desktop/my-app/src/hooks/useTheme.ts":"8","/Users/kwondambi/Desktop/my-app/src/styles/global-style.ts":"9","/Users/kwondambi/Desktop/my-app/src/components/Button/Share.tsx":"10"},{"size":525,"mtime":1610701819897,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1610454464042,"results":"13","hashOfConfig":"12"},{"size":836,"mtime":1610711665674,"results":"14","hashOfConfig":"12"},{"size":466,"mtime":1610726112748,"results":"15","hashOfConfig":"12"},{"size":1043,"mtime":1610723759476,"results":"16","hashOfConfig":"12"},{"size":418,"mtime":1610711764198,"results":"17","hashOfConfig":"12"},{"size":793,"mtime":1610724820077,"results":"18","hashOfConfig":"12"},{"size":1076,"mtime":1610635372565,"results":"19","hashOfConfig":"12"},{"size":438,"mtime":1610723821306,"results":"20","hashOfConfig":"12"},{"size":2292,"mtime":1610726057083,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"136e99e",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kwondambi/Desktop/my-app/src/index.tsx",[],["45","46","47","48","49"],"/Users/kwondambi/Desktop/my-app/src/reportWebVitals.ts",[],"/Users/kwondambi/Desktop/my-app/src/App.tsx",["50"],"import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport useTheme from './hooks/useTheme';\nimport MainFooter from './components/Footer/MainFooter';\nimport MainHeader from './components/Header/MainHeader';\nimport '@blueprintjs/core/lib/css/blueprint.css';\nimport theme from './styles/theme';\nimport './assets/css/common.css';\nimport GlobalStyle from './styles/global-style';\nimport Home from './pages/Home';\n\nconst App:React.FC = () => {\n  const [themeMode, toggleTheme] = useTheme(); // hook 함수 하용\n  const nowTheme = themeMode === 'light' ? theme.light : theme.dark; // 테마 환경에 맞는 테마 컬러 가져오기.\n\n  return (\n    <ThemeProvider theme={nowTheme}>\n      <GlobalStyle />\n      <MainHeader />\n      <Home />\n      <MainFooter />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","/Users/kwondambi/Desktop/my-app/src/components/Footer/MainFooter.tsx",["51"],"/Users/kwondambi/Desktop/my-app/src/components/Header/MainHeader.tsx",[],"/Users/kwondambi/Desktop/my-app/src/pages/Home.tsx",["52"],"import React from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  min-height: 100%;\n  background-color: ${(props) => props.theme.mainBackground};\n  color: ${(props) => props.theme.primaryText};\n`;\n\nconst Home: React.FC = () => {\n    return (\n      <Container>\n        <h1>🎨</h1>\n      </Container>\n    );\n};\n\nexport default Home;","/Users/kwondambi/Desktop/my-app/src/styles/theme.ts",[],"/Users/kwondambi/Desktop/my-app/src/hooks/useTheme.ts",[],"/Users/kwondambi/Desktop/my-app/src/styles/global-style.ts",[],"/Users/kwondambi/Desktop/my-app/src/components/Button/Share.tsx",["53"],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":13,"column":21,"nodeType":"66","messageId":"67","endLine":13,"endColumn":32},{"ruleId":"64","severity":1,"message":"68","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":26},{"ruleId":"64","severity":1,"message":"69","line":2,"column":10,"nodeType":"66","messageId":"67","endLine":2,"endColumn":29},{"ruleId":"70","severity":1,"message":"71","line":7,"column":16,"nodeType":"72","messageId":"73","endLine":7,"endColumn":19,"suggestions":"74"},"lines-around-directive",["75"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'toggleTheme' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'RouteComponentProps' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["76","77"],"padding-line-between-statements",{"messageId":"78","fix":"79","desc":"80"},{"messageId":"81","fix":"82","desc":"83"},"suggestUnknown",{"range":"84","text":"85"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"84","text":"86"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[220,223],"unknown","never"]